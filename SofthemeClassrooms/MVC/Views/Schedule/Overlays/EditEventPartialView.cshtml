<link href="~/Content/Overlays/AddEventPartialView.css" rel="stylesheet" />
<script src="~/Scripts/Overlays/AddEventPartialView.js"></script>

<script src="https://use.fontawesome.com/8492b6eaf6.js"></script>


@model WebApplication1.Models.Schedule.EditEventPartialViewModel

@{
    string callBackAction = @ViewBag.CallBackAction;
}
@using (Html.BeginForm(callBackAction, "Schedule", FormMethod.Post, new { @class = "edit-event-form" }))
{

    <div class="event-edit-popup">
        <input class="hidden-eventId" type="hidden" value="@ViewBag.eventId"/>
        <div class="event-edit-header">

            <div class="custom-numeric-picker month-day-picker">
                <i class="fa fa-caret-up" aria-hidden="true"></i><br>
                <input type="text" class="date-custom-input" readonly value="@Model.Start.Day" /><br />
                <i class="fa fa-caret-down" aria-hidden="true"></i>
            </div>

            <div style='width: 30px; display: inline-block'>
            </div>

            <div class="custom-numeric-picker month-picker">
                <i class="fa fa-caret-up" aria-hidden="true"></i><br>
                <input type="text" readonly class="date-custom-input" /><br />
                <input type="hidden" value="@Model.Start.Month" />
                <i class="fa fa-caret-down" aria-hidden="true"></i>
            </div>

            <div style='width: 30px; display: inline-block'>
            </div>

            <div id="first" class="custom-numeric-picker hour-picker">
                <i class="fa fa-caret-up" aria-hidden="true"></i><br>
                <input type="text" class="date-custom-input" readonly value="@Model.Start.Hour" /><br />
                <i class="fa fa-caret-down" aria-hidden="true"></i>
            </div>
            <div class="custom-delimiter">:</div>
            <div id="first" class="custom-numeric-picker minute-picker">
                <i class="fa fa-caret-up" aria-hidden="true"></i><br>
                <input type="text" class="date-custom-input" readonly value="@Model.Start.Minute" /><br />
                <i class="fa fa-caret-down" aria-hidden="true"></i>
            </div>


            <div class="custom-delimiter">-</div>


            <div id="second" class="custom-numeric-picker hour-picker">
                <i class="fa fa-caret-up" aria-hidden="true"></i><br>
                <input type="text" class="date-custom-input" readonly value="@Model.End.Hour" /><br />
                <i class="fa fa-caret-down" aria-hidden="true"></i>
            </div>
            <div class="custom-delimiter">:</div>
            <div id="second" class="custom-numeric-picker minute-picker">
                <i class="fa fa-caret-up" aria-hidden="true"></i><br>
                <input type="text" class="date-custom-input" readonly value="@Model.End.Minute" /><br />
                <i class="fa fa-caret-down" aria-hidden="true"></i>
            </div>


            @Html.DropDownList("RoomId", (List<SelectListItem>)ViewBag.RoomIdOptions, new { @class = "custom-room-dropdown" })

            <i class="fa fa-window-minimize" aria-hclassden="true"></i>
        </div>

        <div class="event-edit-contents">

            <input type="text" class="Title" name="Title" placeholder="Заголовок" value="@Model.Title" />

            <br />

            <textarea rows="5" cols="50" placeholder="Дополнительная информация" class="Description">@Model.Description</textarea>

            <div class="event-reg-info">

                @{
                    string isPub;
                    // slightly confusing
                    if (!Model.IsPublic)
                    {
                        isPub = "checked";
                    }

                    else
                    {
                        isPub = "";
                    }

                    string allowSub;
                    if (Model.AllowSubscription)
                    {
                        allowSub = "checked";
                    }

                    else
                    {
                        allowSub = "";
                    }


                    string showAuthor;
                    if (Model.ShowAuthor)
                    {
                        showAuthor = "checked";
                    }
                    else
                    {
                        showAuthor = "";
                    }
                }

                <div class="reg-info">
                    <!-- Squared THREE -->
                    <div>
                        <input type="checkbox" value="true" id="" class="AllowReg" @allowSub />
                        <label for="squaredThree"></label>
                    </div>

                    <span id="reg-text">Регистрация желающих</span>

                </div>

                <div class="event-privacy-info">

                    <span id="public-text">Публично</span>

                    <div class="slideThree">
                        <input type="checkbox" value="true" class="IsPublic" id="slideThree" name="check" @isPub />
                        <label for="slideThree"></label>
                    </div>

                    <span id="private-text">Приватно</span>

                </div>

                <div class="author-info">
                    <!-- Squared THREE -->

                    <div class="show-author-check">
                        <input type="checkbox" value="true" id="show-author" class="ShowAuthor" name="ShowAuthor" @showAuthor />
                        <label for="squaredThree"></label>
                    </div>

                    <span id="show-author-text">Показать автора   или</span>

                    <input type="text" class="org-name-input OrganizerName" placeholder="Указать организатора" name="OrganizerName" value="@Model.OrganizerName" @((Model.ShowAuthor) ? "disabled" : "") />

                </div>


            </div>


        </div>


        <div class="error-panel">

        </div>

        <input type="button" class="send-event-form-data" value= @(ViewBag.IsNew ? "Создать" : "Изменить") />
    </div>
                    }

<script>
    $(() => {
        $('#show-author').change(function () {
            if ($(this).is(":checked"))
                $('.org-name-input').prop('disabled', true);
            else
                $('.org-name-input').prop('disabled', false);
        });


        $(".send-event-form-data").click(function () {
            var year = new Date().getFullYear();
            var month = $(".month-picker input[type='hidden']").val();
            var day = $(".month-day-picker .date-custom-input").val();

            var hours1 = $(".hour-picker#first .date-custom-input").val();
            var minutes1 = $(".minute-picker#first .date-custom-input").val();

            var hours2 = $(".hour-picker#second .date-custom-input").val();
            var minutes2 = $(".minute-picker#second .date-custom-input").val();

            var dateStart = new Date(year, month, day, hours1, minutes1, 0, 0);
            var dateEnd = new Date(year, month, day, hours2, minutes2, 0, 0);

            var isPub = !($('.IsPublic').is(':checked'));
            var jsonData = JSON.stringify(
                {
                    'AllowSubscription': $('.AllowReg').is(':checked'),
                    'ShowAuthor': $('.ShowAuthor').is(':checked'),
                    'OrganizerName': $('.OrganizerName').val(),
                    'RoomId': $('.custom-room-dropdown').val(),
                    'Description': $('.Description').val(),
                    'Title': $('.Title').val(),
                    'IsPublic': isPub,
                    'Start': dateStart,
                    'End': dateEnd,
                    // will be ignored by addEvent model binder
                    'eventId': $('.hidden-eventId').val()
                });

            //alert(jsonData);

            $.ajax({
                url: $('.edit-event-form').attr('action'),
                type: "POST",
                data: jsonData
                    ,
                contentType: "application/json; charset=utf-8",
                success: function (data, textStatus, jqXHR) {
                    //alert(JSON.stringify(data));

                    if (data.status == 'success') {
                        $('.edit-event-form').remove();
                        try{
                            reRenderTimeTableTrick();
                        }
                        catch(err)
                        {

                        }

                        try {
                            $('#calendar').fullCalendar('destroy');
                            renderScheduler();
                            $('#calendar').fullCalendar('render');
                        }
                        catch(err)
                        {
                            
                        }
                        
                    }
                    
                    else {
                        var errors = data.Errors;
                        $('.error-panel').empty();
                        $('.error-panel').append('<i class="fa fa-frown-o fa-3x"></i>');
                        $('.error-panel').css('display', 'inline-block');

                        for (var i = 0; i < errors.length; i++)
                            $('.error-panel').append("<span>" + errors[i] + "</span> <br>");

                    }
                }
            });
        });
    });

</script>



